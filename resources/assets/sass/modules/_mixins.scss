@mixin bp($queries, $type: only screen) {
  $query-count: length($queries);
  $media-statement: "#{$type} and";
  @for $i from 1 through $query-count {
    $query: nth($queries, $i);
    $value: '';
    $key: '';
    @if length($query) == 1 or nth($query, 2) == up {
      $key: min-width;
      $value: if(map-has-key($bp, nth($query, 1)), px-em(map-get($bp, nth($query, 1))), px-em(nth($query, 1)));
    } @else {
      @if nth($query, 2) == down {
        $key: max-width;
        $value: if(map-has-key($bp, nth($query, 1)), px-em(map-get($bp, nth($query, 1)) - 1), px-em(nth($query, 1) - 1));
      } @else {
        $key: nth($query, 1);
        $value: nth($query, 2);
      }
    }
    $media-statement: if($i == 1, "#{$media-statement} (#{$key}: #{$value})", "#{$media-statement}, (#{$key}: #{$value})");
  }
  @media #{$media-statement} {
    @content;
  }
}

@mixin text-hide() {
  display: block;
  overflow: hidden;
  text-indent: -9999em;
  white-space: nowrap;
}

@mixin text-wai() {
  display: block !important;
  height: 0px !important;
  overflow: hidden !important;
  white-space: nowrap !important;
  width: 0px !important;
  margin: 0 !important;
  padding: 0 !important;
}

@mixin clear() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin button() {
  cursor: pointer;
  padding: 16px 20px 15px 20px;
  text-transform: uppercase;
  text-decoration: none;
  font-size: rem(16);
  color: #fff;
  border: none;
  text-align: center;
  background: $primary;
  font-family: $subtitle-stack;
  @include transition();
  &:hover { 
    text-decoration: none;
    @include card(3, lighten($primary, 5%));
    border-bottom: none;
    color: #fff;
  }
}

@mixin hollow-button() {
  cursor: pointer;
  padding: 10px 20px 10px 20px;
  text-transform: uppercase;
  text-decoration: none;
  font-size: rem(16);
  color: #fff;
  border: rem(5) solid $primary;
  text-align: center;
  background: transparent;
  font-family: $subtitle-stack;
  &:hover { text-decoration: none; }
}

@mixin card($level: 1, $background: #fff, $border-radius: 2px) {
  @if $level == 1 {box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);background:$background;border-radius:$border-radius;} 
  @else if $level == 2 {box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);background:$background;border-radius:$border-radius;}
  @else if $level == 3 {box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);background:$background;border-radius:$border-radius;}
  @else if $level == 4 {box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);background:$background;border-radius:$border-radius;}
  @else if $level == 5 {box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);background:$background;border-radius:$border-radius;}
}

@mixin flex-row() {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  direction: row;
}

@mixin flex() {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin transition($property:all, $time:.2s, $ease:ease-in-out) {
  -webkit-transition: $property $time $ease;
  -moz-transition: $property $time $ease;
  -o-transition: $property $time $ease;
  -ms-transition: $property $time $ease;
  transition: $property $time $ease;
}